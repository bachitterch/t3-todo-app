import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { useSession, signIn, signOut } from 'next-auth/react'
import { getServerAuthSession } from "../server/common/get-server-auth-session";
import { trpc } from '../utils/trpc'

const Home: NextPage = () => {

  const { data: todos } = trpc.useQuery(["todosgetTodos"]);

    console.log(todos)

  const { data: session, status } = useSession()

  if (status === "loading") {
    return <main>Loading...</main>;
  }

  return (
    <>
      <Head>
        <title>Todo App - T3 Stack</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex items-center justify-center w-full h-full">
        {
        session ? (
        <div className="flex flex-col space-y-4">
        <p>Signed in as {session?.user?.email} </p>
      <button className="bg-gray-200 px-3 py-2 rounded-lg" onClick={() => signOut()}>Sign Out</button>

            {todos?.map((todo, index) => {
        return (
          <div key={index}>
            <span>{todo.todo}</span> {' '}
            <span>- {todo.completed ? 'true' : 'false'}</span>
          </div>
        );
      })}
      </div>
        ) :(
         <div className="flex flex-col space-y-4">
      <p>Not signed in </p>
      <button className="bg-gray-200 px-3 py-2 rounded-lg" onClick={() => signIn('discord')}>Sign in</button>
    </div>
        )
      }
      </main>
    </>
  );
};

export default Home;



export const getServerSideProps: GetServerSideProps = async (context) => {

  const session = await getServerAuthSession(context)

  return {
    props: {
     session
    }
  }
}
